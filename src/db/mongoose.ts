import mongoose from 'mongoose';
import { config } from '../config';

const connectDB = async (): Promise<void> => {
  try {
    const options = {
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
      maxPoolSize: 10, // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –≤ –ø—É–ª–µ
      serverSelectionTimeoutMS: 5000, // –¢–∞–π–º–∞—É—Ç –≤—ã–±–æ—Ä–∞ —Å–µ—Ä–≤–µ—Ä–∞
      socketTimeoutMS: 45000, // –¢–∞–π–º–∞—É—Ç —Å–æ–∫–µ—Ç–∞
      // –£–¥–∞–ª–µ–Ω—ã —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –æ–ø—Ü–∏–∏ useNewUrlParser, useUnifiedTopology, bufferMaxEntries, bufferCommands
    };

    await mongoose.connect(config.mongodb.uri, options);
    console.log('‚úÖ MongoDB Atlas –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    console.log(`üìç –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫: ${config.mongodb.uri.replace(/\/\/.*@/, '//***:***@')}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB Atlas:', error);
    console.error('üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
    console.error('   - –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å URI –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è');
    console.error('   - –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞');
    console.error('   - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ firewall');
    console.error('   - IP –∞–¥—Ä–µ—Å–∞ –≤ whitelist MongoDB Atlas');
    process.exit(1);
  }
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
mongoose.connection.on('connected', () => {
  console.log('üîó Mongoose –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ MongoDB');
});

mongoose.connection.on('error', (err) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ Mongoose:', err);
});

mongoose.connection.on('disconnected', () => {
  console.log('üîå Mongoose –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç MongoDB');
});

// Graceful shutdown
process.on('SIGINT', async () => {
  await mongoose.connection.close();
  console.log('üîå MongoDB —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ —á–µ—Ä–µ–∑ app termination');
  process.exit(0);
});

export default connectDB;
